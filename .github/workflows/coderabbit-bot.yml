name: CodeRabbit Bot Trigger

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  trigger-coderabbit:
    runs-on: ubuntu-latest
    # Skip running on PRs from bots or internal automation
    if: ${{ !contains(github.actor, 'bot') && !contains(github.actor, 'dependabot') }}
    
    steps:
      - name: Check PR Status
        id: check_pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;
            
            // Get PR data to check if it's from a fork
            const pr = await github.rest.pulls.get({
              owner: owner,
              repo: repo,
              pull_number: number
            });
            
            // Skip internal PRs if needed (uncomment to enable)
            // if (pr.data.head.repo.full_name.startsWith(`${owner}/`)) {
            //   core.setOutput('is_internal', 'true');
            //   return;
            // }
            
            // Get existing comments to avoid duplicates
            const comments = await github.rest.issues.listComments({
              owner: owner, 
              repo: repo,
              issue_number: number
            });
            
            console.log(`DEBUG: PR #${number} details - Title: "${pr.data.title}", User: ${pr.data.user.login}`);
            console.log(`DEBUG: Checking PR #${number} for existing CodeRabbit comments (total comments: ${comments.data.length})`);
            
            // Log detailed comment information for debugging
            comments.data.forEach((comment, index) => {
              console.log(`DEBUG: Comment #${index+1} - Author: ${comment.user.login}, Created: ${comment.created_at}`);
              console.log(`DEBUG: Comment preview: "${comment.body.substring(0, 50)}${comment.body.length > 50 ? '...' : ''}"`);
            });
            
            const botCommented = comments.data.some(comment => 
              comment.user.login === 'coderabbit-bot' && 
              comment.body.includes('@coderabbitai'));
              
            if (botCommented) {
              console.log(`DEBUG: ‚úì Found existing CodeRabbit comment - bot will NOT comment again`);
              core.setOutput('already_commented', 'true');
            } else {
              console.log(`DEBUG: ‚úó No existing CodeRabbit comments found - bot WILL comment`);
            }
            
            // For rate limiting - check timing if needed
            const shouldComment = !botCommented;
            core.setOutput('should_comment', shouldComment ? 'true' : 'false');
            console.log(`DEBUG: Final decision - should_comment: ${shouldComment}, PR: #${number}, Repo: ${owner}/${repo}`);
      
      - name: Post CodeRabbit Trigger Comment
        if: ${{ steps.check_pr.outputs.should_comment == 'true' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;
            
            console.log(`DEBUG: Starting comment operation for PR #${number} in ${owner}/${repo}`);
            try {
              console.log(`DEBUG: Attempting to post CodeRabbit trigger comment...`);
              await github.rest.issues.createComment({
                owner: owner,
                repo: repo,
                issue_number: number,
                body: '@coderabbitai review'
              });
              console.log('Comment posted successfully');
              
              // Optional: Add a label
              console.log('Adding coderabbit-reviewing label to PR');
              await github.rest.issues.addLabels({
                owner: owner,
                repo: repo,
                issue_number: number,
                labels: ['coderabbit-reviewing']
              });
            } catch (error) {
              console.error(`DEBUG: Error posting comment or adding label: ${error.message}`);
            }
            
      - name: Send Slack Notification
        if: ${{ steps.check_pr.outputs.should_comment == 'true' }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "üê∞ CodeRabbit review triggered for PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}\n${{ github.event.pull_request.html_url }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}